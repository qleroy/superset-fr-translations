name: Translate and Convert PO Files

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'  # Correspond aux tags de la forme nombre.nombre.nombre

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Prepare Git environment
      run: |
        echo "Preparing Git environment"
        # Make sure .gitconfig exists and is writable
        touch $HOME/.gitconfig
        chmod 644 $HOME/.gitconfig
        # Make temp directory if it doesn't exist
        mkdir -p $RUNNER_TEMP
        # Create a minimal initial git config to avoid warnings
        git config --global --add safe.directory "*"
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        # Show the current Git configuration
        echo "Current Git configuration:"
        git config --list

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip --no-cache-dir
        pip install babel --no-cache-dir

        # Install Node.js via NVM
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm install 20
        nvm use 20

        # Clear npm cache and install po2json
        npm cache clean --force
        npm install -g po2json
        # Verify installation
        which po2json
        po2json --version || echo "po2json version command not supported"

    - name: Compile PO files
      run: |
        pybabel compile -d superset/translations || true

    - name: Convert PO to JSON
      run: |
        # Load NVM and Node environment
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm use 20

        # Ensure we're using the npm version of po2json
        NPM_PO2JSON=$(npm bin -g)/po2json
        echo "Using po2json from: $NPM_PO2JSON"

        # Process superset translations
        for file in $(find ./superset/translations -name '*.po');
        do
          dirname=$(dirname "$file")
          basename=$(basename "$file" .po)
          output_file="$dirname/$basename.json"
          echo "Converting $file to $output_file"
          $NPM_PO2JSON "$file" "$output_file" --format=jed1.x --domain=superset
        done

        # Process fab translations
        for file in $(find ./fab/translations -name '*.po');
        do
          dirname=$(dirname "$file")
          basename=$(basename "$file" .po)
          output_file="$dirname/$basename.json"
          echo "Converting $file to $output_file"
          $NPM_PO2JSON "$file" "$output_file" --format=jed1.x --domain=fab
        done

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset - fab/messages.mo
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fab/translations/fr/LC_MESSAGES/messages.mo
        asset_name: fab-messages.mo
        asset_content_type: application/octet-stream

    - name: Upload Release Asset - superset/messages.mo
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: superset/translations/fr/LC_MESSAGES/messages.mo
        asset_name: superset-messages.mo
        asset_content_type: application/octet-stream

    - name: Upload Release Asset - fab/messages.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: fab/translations/fr/LC_MESSAGES/messages.json
        asset_name: fab-messages.json
        asset_content_type: application/json

    - name: Upload Release Asset - superset/messages.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: superset/translations/fr/LC_MESSAGES/messages.json
        asset_name: superset-messages.json
        asset_content_type: application/json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: translation-files
        path: |
          fab/translations/fr/LC_MESSAGES/messages.mo
          fab/translations/fr/LC_MESSAGES/messages.json
          superset/translations/fr/LC_MESSAGES/messages.mo
          superset/translations/fr/LC_MESSAGES/messages.json
